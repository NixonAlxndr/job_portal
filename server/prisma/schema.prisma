// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id String @id @default(uuid())
  email String @unique
  password String
  name String
  role Role @default(USER)

  company Company?
}

model Company {
  id String @id @default(uuid())
  name String 
  place String
  latitude String
  longitude String

  user User @relation(fields: [userId], references: [id])
  userId String @unique
  jobs Jobs[]
}

model Jobs {
  id String @id @default(uuid())
  jobTitle String
  jobDescription String
  jobType String
  experience Int
  degree String
  salary String
  responsibilites String[]
  skills String[]
  jobPosted DateTime @default(now())

  
  jobTags Tag[]

  company Company @relation(fields: [companyId], references: [id])
  companyId String

  jobCategory Category @relation(fields: [jobCategoryId], references: [id])
  jobCategoryId Int @unique
}

model Category {
  id Int @id @default(autoincrement())
  name String

  job Jobs?
}

model Tag {
  id Int @id @default(autoincrement())
  name String

  job Jobs[]
}

enum Role {
  USER
  COMPANY
}